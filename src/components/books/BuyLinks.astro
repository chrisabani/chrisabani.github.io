---
import ConvertISBN from "./ConvertISBN.astro";
export interface Props {
	title: string;
	editions: Array<{
		binding: string;
		isbn: number;
	}>;

}
const { content } = Astro.props;
const { editions, title } = content;

const default_services = [
	{ id: "bookshop", label: "Your Independent Bookstore", show: true, url: "https://www.bookshop.org/a/287/%s" },
	{ id: "barnesandnoble", label: "Barnes & Noble", show: true, url: "https://www.barnesandnoble.com/w/?ean=%s" },
	{ id: "amazon", label: "Amazon", show: true, url: "https://amazon.com/dp/%s" },

]

const audiobook_services = [
	{ id: "audible", label: "Audible.com", show: true, url: "" },
	{ id: "apple_books", label: "Apple Books", show: true, url: "" },
	{ id: "libro", label: "Libro.fm", show: false, url: "https://libro.fm/audiobooks/%s" },

]

const Services = default_services.filter(service => service.show === true && service.id != "amazon");
const ServicesAmazon = default_services.filter(service => service.show === true && service.id == "amazon");

let EditionPrint = editions.filter(edition => (edition.binding === "paperback" || edition.binding === "hardcover")).slice(0, 1);
let EditionEbooks = editions.filter(edition => edition.binding === "e-book").slice(0, 1);
let EditionAudiobook = editions.filter(edition => edition.binding === "audiobook").slice(0, 1);


---		

<div class="text-sm border-b inline-block mt-12">Buy {title}:</div>



<div class="text-white">

	{Services.map(service =>
	
	(
	<a href={service.url.replace(/\%s/, service.id=="amazon" ? EditionPrint[0].isbn : EditionPrint[0].isbn )}
		target="_blank" class="block">
		{service.label}
	</a>
	)
	
	
	)}

	{ServicesAmazon.map(service =>
	
	(	<ConvertISBN isbn={EditionPrint[0].isbn} />
		<a target="_blank" href={service.url.replace(/\%s/, "foo" )}>
			{service.label}
		</a>
	)	
	

	)}



</div>