---
export interface Props {
	title: string;
	editions: Array<{
		binding: string;
		isbn: number;
	}>;

}
const { content } = Astro.props;
const { editions, title } = content;


const print_services = [
	{ id: "bookshop", label: "Your Independent Bookstore", show: true, url: "https://www.bookshop.org/a/287/%s" },
	{ id: "barnesandnoble", label: "Barnes & Noble", show: true, url: "https://www.barnesandnoble.com/w/?ean=%s" },
	{
		id: "amazon",
		label: "Amazon",
		show: true,
		url: "https://amazon.com/dp/%s"
	}
]

const audiobook_services = [
	{ id: "audible", label: "Audible.com", show: true, url: "" },
	{ id: "apple_books", label: "Apple Books", show: true, url: "" },
	{ id: "libro", label: "Libro.fm", show: false, url: "https://libro.fm/audiobooks/%s" },

]

let EditionPrint = editions.filter(edition => (edition.binding === "paperback" || edition.binding === "hardcover")).slice(0, 1);
let EditionEbooks = editions.filter(edition => edition.binding === "e-book").slice(0, 1);
let EditionAudiobook = editions.filter(edition => edition.binding === "audiobook").slice(0, 1);

let isbn13 = EditionPrint[0].isbn;

var GeneratedISBN = (isbn13) => {

	var isbn = String(isbn13).substring(3, 12)

	let sum = 0;
	let mul = 10;

	for (let i = 0; i < 9; i++) {
		sum = sum + (
			mul * parseInt(isbn[i])
		);
		mul -= 1;
	}

	let checkDig = 11 - (sum % 11);

	if (checkDig == 10) { checkDig = "X"; }
	else if (checkDig == 11) { checkDig = 0; }

	let isbn10 = isbn + checkDig;

	return isbn10;

}
var isbn10 = GeneratedISBN(isbn13);
---

<div class="">Buy <em>{title}</em></div>
	{print_services.map(service => (
	<a href={service.url.replace(/\%s/, service.id=="amazon" ? isbn10 : EditionPrint[0].isbn )}
		target="_blank" class="block">
		{service.label}
	</a>
	))}

