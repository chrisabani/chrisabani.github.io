---
import Booksellers from "../../data/Booksellers.json";
export interface Props {
	title: string;
	ButtonClasses: string;
	editions: Array<{
		binding: string;
		isbn: string;
		asin: string;
		apple_id: string;
	}>;

}
const { content } = Astro.props;
const { editions, title, binding, isbn, apple_id, asin } = content;


// Booksellers

// PRINT
let Print = Booksellers.filter(service => (typeof service.type == "string") ? (service.type == "print") : (service.type.includes("print"))).filter(service => service.show != false)

// Ebook
let Ebook = Booksellers.filter(service => (typeof service.type == "string") ? (service.type == "ebook") : (service.type.includes("ebook"))).filter(service => service.show != false)

let Kindle = Ebook.filter(service => (service.id == "amazon"))

let AppleBooks = Ebook.filter(service => (service.id == "apple_books"))

//AudioBook
let Audiobook = Booksellers.filter(service => (typeof service.type == "string") ? (service.type == "audiobook") : (service.type.includes("audiobook"))).filter(service => service.show != false)

let Audible = Audiobook.filter(service => (service.id == "audible"))


// EDITIONS
let EditionPrint = editions.filter(edition => (edition.isbn != "") && (edition.binding === "paperback" || edition.binding === "hardcover")).slice(0, 1);

let EditionEbooks = editions.filter(edition => edition.binding === "e-book").slice(0, 1);

let EditionAudiobook = editions.filter(edition => (edition.binding === "audiobook")).slice(0, 1);

//  GENERATE ISBN10 from ISBN13

let isbn13 = EditionPrint[0].isbn;

var GeneratedISBN = (isbn13) => {

	var isbn = String(isbn13).substring(3, 12)

	let sum = 0;
	let mul = 10;

	for (let i = 0; i < 9; i++) {
		sum = sum + (
			mul * parseInt(isbn[i])
		);
		mul -= 1;
	}

	let checkDig = 11 - (sum % 11);

	if (checkDig == 10) { checkDig = "X"; }
	else if (checkDig == 11) { checkDig = 0; }

	let isbn10 = isbn + checkDig;

	return isbn10;

}
var isbn10 = GeneratedISBN(isbn13);

const ButtonClasses = "px-2 py-1 mb-4 inline-block text-sm bg-white rounded mr-3 text-black no-underline hover:bg-amber-700 hover:text-white transition"
---

{EditionPrint?.length > 0 && 
	<div>Buy <em>{title}</em></div>
	{EditionPrint[0].isbn && 
		<Fragment>
			{Print.map(service => (
				<a class={ButtonClasses} href={service.url.replace(/\%s/, service.id=="amazon" ? isbn10 : EditionPrint[0].isbn )} target="_blank" class="block">
					{service.label}
				</a>					
			))}
		</Fragment>
	}
}


{EditionEbooks?.length > 0 &&
	<div class="mt-1">Ebook</div>	
	{(Kindle[0] && EditionEbooks[0].asin) && 
		<Fragment>					
			{
				<a class={ButtonClasses} href={Kindle[0].url.replace(/\%s/, EditionEbooks[0].asin)} target="_blank" class="block">
					{Kindle[0].label}
				</a>																		
			}				
		</Fragment>
	}

	{(AppleBooks[0] && EditionEbooks[0].apple_id) && 
		<Fragment>					
			{
				<a class={ButtonClasses} href={AppleBooks[0].url.replace(/\%s/, EditionEbooks[0].apple_id)} target="_blank" class="block">
					{AppleBooks[0].label}
				</a>																		
			}				
		</Fragment>
	}

	{EditionEbooks[0].isbn && 
		<Fragment>		
			{Ebook.map(service => (					
				((service.id != "amazon" && service.id != "apple_books" ) &&
					<a class={ButtonClasses} href={service.url.replace(/\%s/, EditionEbooks[0].isbn)} target="_blank" class="block">
						{service.label}
					</a>																		
				)				
			))}
		</Fragment>
		}
	}


{EditionAudiobook?.length > 0 &&
	<div class="mt-1">Audiobook</div>	
	{( Audible[0] && EditionAudiobook[0].asin) && 
		<Fragment>					
			{
				<a class={ButtonClasses} href={Audible[0].url.replace(/\%s/, EditionAudiobook[0].asin)} target="_blank" class="block">
					{Audible[0].label}
				</a>																		
			}				
		</Fragment>
	}

	{EditionAudiobook[0].isbn && 
		<Fragment>		
			{Audiobook.map(service => (					
				(service.id != "audible" &&
					<a class={ButtonClasses} href={service.url.replace(/\%s/, EditionAudiobook[0].isbn)} target="_blank" class="block">
						{service.label}
					</a>																		
					)				
				))}
		</Fragment>
	}
}

